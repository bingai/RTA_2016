#!/bin/bash
# THIS IS A GENERATED FILE, NOT RECOMMENDED TO EDIT.

function log() {
  logger -s -p user.$1 ${@:2}
}

log info "ros: Using workspace setup file /etc/ros/setup.bash"
source /etc/ros/setup.bash
source /home/administrator/ros_ws/devel/setup.bash
#JOB_FOLDER=/etc/ros/indigo/ros.d
JOB_FOLDER=/home/administrator/ros_ws/src/ridgeback_launcher/launch/ros.d
URDF_FOLDER=/home/administrator/ros_ws/src/ridgeback_launcher/config

log_path="/tmp"
if [[ ! -d $log_path ]]; then
  CREATED_LOGDIR=true
  trap 'CREATED_LOGDIR=false' ERR
    log warn "ros: The log directory you specified \"$log_path\" does not exist. Attempting to create."
    mkdir -p $log_path 2>/dev/null
    chown administrator:administrator $log_path 2>/dev/null
    chmod ug+wr $log_path 2>/dev/null
  trap - ERR
  # if log_path could not be created, default to tmp
  if [[ $CREATED_LOGDIR == false ]]; then
    log warn "ros: The log directory you specified \"$log_path\" cannot be created. Defaulting to \"/tmp\"!"
    log_path="/tmp"
  fi
fi

#export ROS_HOSTNAME=$(hostname)
export ROS_IP=192.168.131.1

#export ROS_MASTER_URI=http://127.0.0.1:11311
export ROS_MASTER_URI=http://192.168.131.168:11311

log info "ros: Checking for baxter status"
check=`rostopic list | grep /rosout`
while [[ -z $check ]] 
do
  log info "ros: Could not found Baxter ROS Master"
  sleep 5
  check=`rostopic list | grep /rosout`
done

log info "ros: Connect to Baxter successfully"
log info "ros: Stop the previous ros service"
service ros stop
sleep 5

log info "ros: Update URDF of ridgeback to Baxter service"
rosrun baxter_examples send_urdf_fragment.py -f $URDF_FOLDER/baxter_ridgeback.urdf.xacro -l torso -j pedestal_fixed &

sleep 10

log info "ros: Launching ROS_HOSTNAME=$ROS_HOSTNAME, ROS_IP=$ROS_IP, ROS_MASTER_URI=$ROS_MASTER_URI, ROS_LOG_DIR=$log_path"

# If xacro files are present in job folder, generate and expand an amalgamated urdf.
XACRO_FILENAME=$log_path/ros.xacro
XACRO_ROBOT_NAME=$(echo "ros" | cut -d- -f1)
rosrun robot_upstart mkxacro $JOB_FOLDER $XACRO_ROBOT_NAME > $XACRO_FILENAME
if [[ "$?" == "0" ]]; then
  URDF_FILENAME=$log_path/ros.urdf
  rosrun xacro xacro $XACRO_FILENAME -o $URDF_FILENAME
  if [[ "$?" == "0" ]]; then
    log info "ros: Generated URDF: $URDF_FILENAME"
  else
    log warn "ros: URDF macro expansion failure. Robot description will not function."
  fi
  export ROBOT_URDF_FILENAME=$URDF_FILENAME
fi

# Assemble amalgamated launchfile.
LAUNCH_FILENAME=$log_path/ros.launch
rosrun robot_upstart mklaunch $JOB_FOLDER > $LAUNCH_FILENAME
if [[ "$?" != "0" ]]; then
  log err "ros: Unable to generate amalgamated launchfile."
  exit 1
fi
log info "ros: Generated launchfile: $LAUNCH_FILENAME"

# Warn and exit if setuidgid is missing from the system.
which setuidgid > /dev/null
if [ "$?" != "0" ]; then
  log err "ros: Can't launch as unprivileged user without setuidgid. Please install daemontools package."
  exit 1
fi

# Punch it.
export ROS_HOME=$(echo ~administrator)/.ros
export ROS_LOG_DIR=$log_path
setuidgid administrator roslaunch $LAUNCH_FILENAME &
PID=$!

log info "ros: Started roslaunch as background process, PID $PID, ROS_LOG_DIR=$ROS_LOG_DIR"
echo "$PID" > $log_path/ros.pid

wait "$PID"
